name: Publish PreRelease to TestPyPI üêç

on: 
  push:
    branches:
      - "poetry"
jobs:
  test:
    name: "Run unit tests, lint, and type checking"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: 'x64'
      - name: Install dependencies
        run: |
          pip install tox
      - name: Running tests
        working-directory: ./kubed-fastapi
        run: make test
  build-n-publish:
    name: Build and publish PreRelease to TestPyPI üêç
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@master
    - name: Set up Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: 3.9
    
    - name: Install poetry
      run: |
        curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -
    - name: Install Requirements
      run: poetry install
    - name: Building Package ‚è≥
      run: poetry build
    - name: Configuring poetry
      run: |
        poetry config pypi-token.test-pypi ${{ secrets.TEST_PYPI_API_TOKEN }}
    - name: Publishing üöÄ
      run: |
        poetry publish -r test-pypi
    

    - name: Publish distribution üì¶ to Test PyPI
      uses: coveooss/pypi-publish-with-poetry@v1.0.0
      with:
        project-name: my-project-name
        # For deployment to Official PyPI, just comment next line
        # and replace TEST_PYPI_API_TOKEN
        repository_url: https://test.pypi.org/legacy/
        pypi-token: ${{ secrets.TEST_PYPI_API_TOKEN }}

    - name: Publish distribution üì¶ to Test PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/
    # - name: Publish distribution üì¶ to PyPI
    #   if: startsWith(github.ref, 'refs/tags')
    #   uses: pypa/gh-action-pypi-publish@master
    #   with:
    #     password: ${{ secrets.PYPI_API_TOKEN }}
